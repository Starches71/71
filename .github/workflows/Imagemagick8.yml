name: ImageMagick Gradient Filter Directly to Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  image-overlay:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up ImageMagick and ffmpeg
      run: |
        sudo apt update
        sudo apt install -y imagemagick ffmpeg

    - name: Verify ImageMagick Installation
      run: convert -version

    - name: Download Image from Repository
      run: cp "images (31).jpeg" base_image.jpeg

    - name: Get Image Dimensions
      id: dimensions
      run: |
        width=$(convert base_image.jpeg -format "%w" info:)
        height=$(convert base_image.jpeg -format "%h" info:)
        echo "IMAGE_WIDTH=$width" >> $GITHUB_ENV
        echo "IMAGE_HEIGHT=$height" >> $GITHUB_ENV

    - name: Apply Linear Gradient Filter Directly to Image
      run: |
        convert base_image.jpeg \
          -size ${IMAGE_WIDTH}x${IMAGE_HEIGHT} gradient:white-black \
          -compose Multiply -gravity center -composite output.png

    - name: Add Text with Padding (Avoids Left & Right Edges)
      run: |
        text="Samsung phones can now flip into two because they are the best"
        font_size=13
        font="/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf"

        # Set padding from left and right edges (10% of image width)
        padding=$(echo "$IMAGE_WIDTH * 0.1" | bc)
        x_position=$(echo "$padding" | awk '{print int($1)}')

        # Apply text overlay with padding
        ffmpeg -i output.png -vf "drawtext=text='$text': \
          fontfile='$font':fontsize=$font_size:fontcolor=white: \
          box=1:boxcolor=black@0.5:boxborderw=10: \
          x=$x_position: y=(h-text_h)-20" \
          -y output_with_text.png

    - name: Verify that output_with_text.png was created
      run: |
        if [ ! -f "output_with_text.png" ]; then
          echo "output_with_text.png not created!"
          exit 1
        fi

    - name: Upload Processed Image as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: image-artifact
        path: output_with_text.png
