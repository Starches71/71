name: Merge VID short and long text files with debug

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  merge-vid-files:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Confirm checkout success
      run: echo "✅ Repo checked out"

    - name: Find all Vid*.txt or VID*.txt files
      run: |
        echo "Searching for Vid*.txt or VID*.txt files..."
        ALL_VID_FILES=$(ls Vid*.txt VID*.txt 2>/dev/null || echo "")
        if [ -z "$ALL_VID_FILES" ]; then
          echo "❌ No Vid*.txt or VID*.txt files found!"
          exit 1
        else
          echo "✅ Found files:"
          echo "$ALL_VID_FILES"
          echo
        fi

    - name: Separate shorts and longs
      run: |
        SHORT_FILES=""
        LONG_FILES=""
        for f in Vid*.txt VID*.txt; do
          fname=$(echo "$f" | tr '[:upper:]' '[:lower:]')
          if [[ "$fname" == *short* ]]; then
            echo "Short video file: $f"
            SHORT_FILES="$SHORT_FILES $f"
          elif [[ "$fname" == *long* ]]; then
            echo "Long video file: $f"
            LONG_FILES="$LONG_FILES $f"
          else
            echo "Skipping file (not short or long): $f"
          fi
        done

        echo "Short files list: $SHORT_FILES"
        echo "Long files list: $LONG_FILES"

        if [ -z "$SHORT_FILES" ]; then
          echo "Warning: No short files detected"
        fi
        if [ -z "$LONG_FILES" ]; then
          echo "Warning: No long files detected"
        fi

        echo "SHORT_FILES=$SHORT_FILES" >> $GITHUB_ENV
        echo "LONG_FILES=$LONG_FILES" >> $GITHUB_ENV

    - name: Merge short files
      run: |
        if [ -z "$SHORT_FILES" ]; then
          echo "No short files to merge"
          exit 0
        fi
        cat $SHORT_FILES > VID_SHORT_MERGED.txt
        echo "✅ Merged shorts into VID_SHORT_MERGED.txt"
        head -n 10 VID_SHORT_MERGED.txt || echo "(file empty)"

    - name: Merge long files
      run: |
        if [ -z "$LONG_FILES" ]; then
          echo "No long files to merge"
          exit 0
        fi
        cat $LONG_FILES > VID_LONG_MERGED.txt
        echo "✅ Merged longs into VID_LONG_MERGED.txt"
        head -n 10 VID_LONG_MERGED.txt || echo "(file empty)"

    - name: Configure git user
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Commit and push if changes
      run: |
        git add VID_SHORT_MERGED.txt VID_LONG_MERGED.txt
        if git diff --cached --quiet; then
          echo "No changes to commit"
          exit 0
        else
          git commit -m "Merge VID short and long files - $(date -u)"
          git push origin main
          echo "✅ Changes committed and pushed"
        fi
