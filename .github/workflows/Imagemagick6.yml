name: ImageMagick Gradient Filter Directly to Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  image-overlay:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up ImageMagick
      run: |
        sudo apt update
        sudo apt install -y imagemagick ffmpeg

    - name: Verify ImageMagick Installation
      run: |
        convert -version || { echo "convert not found!"; exit 1; }

    - name: List files in current directory (debugging)
      run: ls -l

    - name: Download Image from Repository
      run: cp "images (31).jpeg" base_image.jpeg

    - name: Verify that input image exists (debugging)
      run: |
        if [ ! -f "base_image.jpeg" ]; then
          echo "base_image.jpeg not found!"
          exit 1
        else
          echo "base_image.jpeg found!"
        fi

    - name: Get Image Dimensions
      id: dimensions
      run: |
        width=$(convert base_image.jpeg -format "%w" info:)
        height=$(convert base_image.jpeg -format "%h" info:)
        echo "Width: $width, Height: $height"
        echo "::set-output name=width::$width"
        echo "::set-output name=height::$height"

    - name: Apply Linear Gradient Filter Directly to Image
      run: |
        convert base_image.jpeg -size ${{ steps.dimensions.outputs.width }}x${{ steps.dimensions.outputs.height }} gradient:white-black -compose Multiply -gravity center -composite output.png

    - name: Add Text to Image using ffmpeg
      run: |
        text="My father is from my daughter's Franchise, he is good one there For one who hates it"
        max_width=240
        font_size=13

        # Wrap text to fit the max width
        wrapped_text=$(echo "$text" | fold -w $max_width)

        # Calculate bottom offset (30% from the bottom)
        bottom_offset=$(echo "$height * 0.30" | bc)

        # Escape the wrapped text to handle special characters properly
        wrapped_text_escaped=$(echo "$wrapped_text" | sed 's/
