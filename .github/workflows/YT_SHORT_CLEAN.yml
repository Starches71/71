
name: Merge, deduplicate, and sort VID files (no dupes, update views)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

jobs:
  merge-vid-files:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Confirm checkout success
      run: echo "✅ Repo checked out"

    - name: Find all Vid*.txt files
      run: |
        echo "Searching for Vid*.txt files..."
        ALL_VID_FILES=$(ls Vid*.txt 2>/dev/null || echo "")
        if [ -z "$ALL_VID_FILES" ]; then
          echo "❌ No Vid*.txt files found!"
          exit 1
        else
          echo "✅ Found files:"
          echo "$ALL_VID_FILES"
        fi

    - name: Separate shorts and longs
      run: |
        SHORT_FILES=""
        LONG_FILES=""
        for f in Vid*.txt; do
          fname=$(echo "$f" | tr '[:upper:]' '[:lower:]')
          if [[ "$fname" == *short* ]]; then
            SHORT_FILES="$SHORT_FILES $f"
          elif [[ "$fname" == *long* ]]; then
            LONG_FILES="$LONG_FILES $f"
          fi
        done
        echo "SHORT_FILES=$SHORT_FILES" >> $GITHUB_ENV
        echo "LONG_FILES=$LONG_FILES" >> $GITHUB_ENV

    - name: Merge & deduplicate shorts (VID_SHORT_ooo.txt)
      run: |
        if [ -z "$SHORT_FILES" ]; then
          echo "No short files to process"
          exit 0
        fi

        cat $SHORT_FILES > _raw_short.txt

        awk '
          BEGIN { RS=""; ORS="\n\n" }
          {
            gsub(/^[■□○●•]+[[:space:]]*/, "", $0)
            match($0, /https:\/\/www\.youtube\.com\/watch\?v=([a-zA-Z0-9_-]+)/, m)
            if (m[1] != "") {
              vid = m[1]
              match($0, /^([0-9,]+) views \| /, v)
              viewcount = (v[1] != "") ? gensub(",", "", "g", v[1]) + 0 : 0
              if (!(vid in seen) || viewcount > views[vid]) {
                seen[vid] = 1
                views[vid] = viewcount
                blocks[vid] = $0
              }
            }
          }
          END {
            n = asorti(views, sorted, "@val_num_desc")
            for (i = 1; i <= n; i++) {
              vid_key = sorted[i]
              print blocks[vid_key]
            }
          }
        ' _raw_short.txt > VID_SHORT_ooo.txt

        echo "✅ Shorts deduplicated and saved to VID_SHORT_ooo.txt"
        head -n 10 VID_SHORT_ooo.txt || echo "(empty)"

    - name: Merge & deduplicate longs (VID_LONG_ooo.txt)
      run: |
        if [ -z "$LONG_FILES" ]; then
          echo "No long files to process"
          exit 0
        fi

        cat $LONG_FILES > _raw_long.txt

        awk '
          BEGIN { RS=""; ORS="\n\n" }
          {
            gsub(/^[■□○●•]+[[:space:]]*/, "", $0)
            match($0, /https:\/\/www\.youtube\.com\/watch\?v=([a-zA-Z0-9_-]+)/, m)
            if (m[1] != "") {
              vid = m[1]
              match($0, /^([0-9,]+) views \| /, v)
              viewcount = (v[1] != "") ? gensub(",", "", "g", v[1]) + 0 : 0
              if (!(vid in seen) || viewcount > views[vid]) {
                seen[vid] = 1
                views[vid] = viewcount
                blocks[vid] = $0
              }
            }
          }
          END {
            n = asorti(views, sorted, "@val_num_desc")
            for (i = 1; i <= n; i++) {
              vid_key = sorted[i]
              print blocks[vid_key]
            }
          }
        ' _raw_long.txt > VID_LONG_ooo.txt

        echo "✅ Longs deduplicated and saved to VID_LONG_ooo.txt"
        head -n 10 VID_LONG_ooo.txt || echo "(empty)"

    - name: Configure Git user
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Commit and push deduplicated files
      run: |
        git add VID_SHORT_ooo.txt VID_LONG_ooo.txt
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "✅ Updated deduplicated VID files - $(date -u)"
          git pull --rebase origin main
          git push origin main
          echo "✅ Changes pushed"
        fi
