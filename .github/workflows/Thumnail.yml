
name: Generate Thumbnail with Manim

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-thumbnail:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Adjust to the version you need

      # Step 3: Install system-level dependencies
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev libcairo2-dev libpango1.0-dev ffmpeg pkg-config

      # Step 4: Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install manim icrawler

      # Step 5: Install ImageMagick (for additional image processing, optional)
      - name: Install ImageMagick
        run: |
          sudo apt-get install -y imagemagick

      # Step 6: Download the image (using icrawler)
      - name: Download Images
        run: |
          python -c 'from icrawler.builtin import GoogleImageCrawler; crawler = GoogleImageCrawler(storage={"root_dir": "downloaded_images"}); crawler.crawl(keyword="San Francisco", max_num=1)'

      # Step 7: Create the Manim script dynamically
      - name: Create Manim Script
        run: |
          echo '
from manim import *
class ThumbnailWithText(Scene):
    def construct(self):
        # Load the image
        image = ImageMobject("downloaded_images/000001.jpg")  # Adjust the image path
        image.scale_to_fit_height(config.frame_height)  # Fit image to frame

        # Add text overlay
        text = Text("Welcome to San Francisco!", font="Arial-Bold", color=WHITE).scale(0.5)  # Adjust text size
        text.next_to(image, DOWN, buff=0.5)  # Position text below the image

        # Add the image and text to the scene
        self.add(image, text)

        # Save a static frame (optional)
        self.wait(1)  # Pause for 1 second
          ' > generate_thumbnail.py

      # Step 8: Run the Manim script to generate the thumbnail
      - name: Run Manim Script
        run: |
          manim -pql generate_thumbnail.py

      # Step 9: Upload the generated thumbnail
      - name: Upload Generated Thumbnail
        uses: actions/upload-artifact@v3
        with:
          name: generated-thumbnail
          path: media/videos/1080p60/ThumbnailWithText.mp4
