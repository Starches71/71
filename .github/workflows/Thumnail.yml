
name: Generate Thumbnail

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-thumbnail:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # You can use any supported Node.js version

      # Step 3: Initialize package.json and install dependencies
      - name: Install Dependencies and Initialize package.json
        run: |
          # Initialize a new Node.js project if package.json doesn't exist
          if [ ! -f package.json ]; then
            npm init -y
          fi
          # Install necessary dependencies
          npm install remotion

      # Step 4: Install ImageMagick (for image manipulation if needed by Remotion)
      - name: Install ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick

      # Step 5: Install icrawler
      - name: Install Python Dependencies (including icrawler)
        run: |
          python -m pip install --upgrade pip
          pip install icrawler

      # Step 6: Download images (using icrawler or your method of choice)
      - name: Download Images
        run: |
          python -c 'from icrawler.builtin import GoogleImageCrawler; crawler = GoogleImageCrawler(storage={"root_dir": "downloaded_images"}); crawler.crawl(keyword="San Francisco", max_num=1)'

      # Step 7: Create and Run the Node.js Remotion script to generate the thumbnail
      - name: Run Remotion Script
        run: |
          # Create the generate-thumbnail.js script dynamically
          echo 'const { Img, Text, Composition, staticFile } = require("remotion");
          const { render } = require("@remotion/renderer");
          const fs = require("fs");
          const imagePath = "downloaded_images/000001.jpg";  // Adjust the path to your image
          const Thumbnail = () => {
            return (
              <Composition width={1280} height={720} fps={30} durationInFrames={150}>
                <Img src={staticFile(imagePath)} style={{ width: "100%", height: "100%", objectFit: "cover" }} />
                <Text text="Welcome to San Francisco!" fontSize={50} color="white" style={{ position: "absolute", bottom: "100px", left: "50%", transform: "translateX(-50%)" }} />
              </Composition>
            );
          };
          async function generateThumbnail() {
            const outputPath = "output/thumbnail_with_text.png";
            const output = await render(<Thumbnail />);
            fs.writeFileSync(outputPath, output);
            console.log("Thumbnail generated and saved to:", outputPath);
          }
          generateThumbnail();' > generate-thumbnail.js

          # Run the script to generate the thumbnail
          node generate-thumbnail.js

      # Step 8: Upload the generated thumbnail
      - name: Upload Generated Thumbnail
        uses: actions/upload-artifact@v3
        with:
          name: generated-thumbnail
          path: output/thumbnail_with_text.png
