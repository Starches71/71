
name: Update Product File

on:
  workflow_dispatch:  # Trigger the workflow manually via GitHub Actions UI

jobs:
  update-product:
    runs-on: ubuntu-latest  # The job runs on an Ubuntu virtual machine

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Check out the repository to get the code

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Set up Python environment (3.x is fine)

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Install any necessary Python dependencies

  read-product:
    runs-on: ubuntu-latest
    needs: update-product  # Run this after repo setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read first product from auto.txt and save it to product.txt
        run: |
          if [ -s auto.txt ]; then
            FIRST_PRODUCT=$(head -n 1 auto.txt)
            echo "$FIRST_PRODUCT" > product.txt
            sed -i '1d' auto.txt
            echo "Selected product: $FIRST_PRODUCT"
          else
            echo "auto.txt is empty or missing." > product.txt
          fi

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add product.txt auto.txt
          git commit -m "Updated product.txt with new product"
          git push

  run-fob:
    runs-on: ubuntu-latest
    needs: read-product  # Run after reading product

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Fob.py and check output
        run: |
          OUTPUT=$(python Fob.py)
          echo "Output from Fob.py: $OUTPUT"
          if [[ "$OUTPUT" == "no" ]]; then
            FIRST_PRODUCT=$(cat product.txt)
            echo "$FIRST_PRODUCT" >> auto_no.txt
          fi

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add auto_no.txt
          git commit -m "Updated auto_no.txt with rejected product"
          git push

  run-fob1:
    runs-on: ubuntu-latest
    needs: run-fob

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Fob1.py
        run: python Fob1.py

  run-fon2:
    runs-on: ubuntu-latest
    needs: run-fob1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Fon2.py
        run: python Fon2.py

  run-fon3:
    runs-on: ubuntu-latest
    needs: run-fon2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Fon3.py
        run: python Fon3.py

  run-fob4:
    runs-on: ubuntu-latest
    needs: run-fon3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Fob4.py
        run: python Fob4.py

  run-fob5:
    runs-on: ubuntu-latest
    needs: run-fob4

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Fob5.py
        run: python Fob5.py

  run-fob6:
    runs-on: ubuntu-latest
    needs: run-fob5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Fob6.py
        run: python Fob6.py
