name: ImageMagick Gradient Filter Directly to Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  image-overlay:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up ImageMagick and ffmpeg
      run: |
        sudo apt update
        sudo apt install -y imagemagick ffmpeg

    - name: Verify ImageMagick Installation
      run: |
        convert -version || { echo "convert not found!"; exit 1; }

    - name: List files in current directory (debugging)
      run: ls -l

    - name: Download Image from Repository
      run: cp "images (31).jpeg" base_image.jpeg

    - name: Verify that input image exists
      run: |
        if [ ! -f "base_image.jpeg" ]; then
          echo "base_image.jpeg not found!"
          exit 1
        else
          echo "base_image.jpeg found!"
        fi

    - name: Get Image Dimensions
      id: dimensions
      run: |
        width=$(convert base_image.jpeg -format "%w" info:)
        height=$(convert base_image.jpeg -format "%h" info:)
        echo "Width: $width, Height: $height"
        echo "IMAGE_WIDTH=$width" >> $GITHUB_ENV
        echo "IMAGE_HEIGHT=$height" >> $GITHUB_ENV

    - name: Apply Fully Visible Linear Gradient
      run: |
        convert -size ${IMAGE_WIDTH}x${IMAGE_HEIGHT} gradient:#FFFFFF-#A0A0A0 gradient.png
        convert base_image.jpeg gradient.png -compose Over -composite output.png

    - name: Add Centered Text to Image using ffmpeg
      run: |
        text="The phones are great unless you want to make them fancy"
        font_size=13
        font="/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf"

        # Define text position closer to the bottom (-10)
        y_pos=$(( IMAGE_HEIGHT - 10 ))

        # Use ffmpeg to add text at proper height
        ffmpeg -i output.png -vf "drawtext=text='$text':fontfile=$font:fontsize=$font_size:fontcolor=white:x=(w-text_w)/2:y=${y_pos}" -y output_with_text.png

    - name: Verify that output_with_text.png was created
      run: |
        if [ ! -f "output_with_text.png" ]; then
          echo "output_with_text.png not created!"
          exit 1
        else
          echo "output_with_text.png created successfully!"
        fi

    - name: List files in current directory after processing
      run: ls -l

    - name: Upload Processed Image as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: image-artifact
        path: output_with_text.png
