
name: Download and Detect Faces

on:
  push:
    branches:
      - main

jobs:
  detect_faces:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y tor curl ffmpeg libgl1 python3-opencv
          sudo service tor start
          python3 -m pip install --upgrade yt-dlp

      - name: Check Tor exit node IP
        run: |
          echo "Tor IP:"
          curl --socks5 127.0.0.1:9050 https://check.torproject.org/api/ip

      - name: Resolve youtube.com via Tor
        run: |
          echo "Resolving YouTube..."
          curl --socks5 127.0.0.1:9050 https://dns.google.com/resolve?name=www.youtube.com&type=A

      - name: Download video via Tor
        run: |
          yt-dlp --proxy "socks5://127.0.0.1:9050" -f bestvideo+bestaudio --merge-output-format mp4 -o "video.mp4" "https://youtu.be/YYuy0eKDAh8?si=MS7iLB8ctAAPloZ8"

      - name: Detect faces using OpenCV
        run: |
          python3 - <<EOF
          import cv2
          face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
          cap = cv2.VideoCapture('video.mp4')
          count = 0
          while True:
              ret, frame = cap.read()
              if not ret:
                  break
              gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
              faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=4)
              if len(faces) > 0:
                  print(f"Frame {count}: Detected {len(faces)} face(s)")
              count += 1
          cap.release()
          EOF
